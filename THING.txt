# Minimum CMake version required
cmake_minimum_required(VERSION 3.10)
project(MeniscusDistortion VERSION 1.0 LANGUAGES CXX) # Project name
set(CMAKE_CXX_STANDARD 17) # Set C++ standard

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# List your source files manually, excluding undesired files
set(SOURCE_FILES
    Ellipse/Ellipse.h
    Screen/Screen.h
    Ellipse/Ellipse.cpp
    Screen/Screen.cpp
    main.cpp
    main.h
    # Add more source files as needed
)

include_directories("/usr/local/include")

# Find OpenCV
if (NOT RASPBERRY_PI)
    set(OPEN_CV_BUILD "C:/opencv-4.8.0/build")
    find_package(OpenCV REQUIRED PATHS ${OPEN_CV_BUILD})
else()
    set(OPEN_CV_BUILD "/usr/local")
    find_package(OpenCV REQUIRED)
endif()

# Find Paho MQTT C++
find_package(PahoMqttCpp REQUIRED)
find_library(PAHO_MQTT_C_LIB paho-mqtt3c REQUIRED)
find_library(PAHO_MQTT_AS_LIB paho-mqtt3as REQUIRED)

if(PahoMqttCpp_FOUND)
	message(STATUS "Found PahoMqttCpp package")
endif()
if(PAHO_MQTT_C_LIB)
	message(STATUS "Found paho-mqtt3c")
endif()
if(PAHO_MQTT_AS_LIB)
	message(STATUS "Found paho-mqtt3as")
endif()

message(STATUS ${PAHO_MQTT_C_LIB})
message(STATUS ${PAHO_MQTT_AS_LIB})

# Link OpenCV and Paho MQTT libraries
add_executable(${PROJECT_NAME} ${SOURCE_FILES}) # Executable target
# target_link_libraries(${PROJECT_NAME} ${OpenCV_LIBS} PahoMqttCpp::paho-mqttpp3 PahoMqttCpp::paho-mqttpp3as)
target_link_libraries(${PROJECT_NAME} ${OpenCV_LIBS} /usr/local/lib/libpaho-mqtt3c.so /usr/local/lib/libpaho-mqtt3as.so)

mohamed@raspberrypi:~/EEEE3001/build $ make
-- Found PahoMqttCpp package
-- Found paho-mqtt3c
-- Found paho-mqtt3as
-- /usr/local/lib/libpaho-mqtt3c.so
-- /usr/local/lib/libpaho-mqtt3as.so
-- Configuring done
-- Generating done
-- Build files have been written to: /home/mohamed/EEEE3001/build
Scanning dependencies of target MeniscusDistortion
[ 25%] Building CXX object CMakeFiles/MeniscusDistortion.dir/Ellipse/Ellipse.cpp.o
[ 50%] Building CXX object CMakeFiles/MeniscusDistortion.dir/Screen/Screen.cpp.o
[ 75%] Building CXX object CMakeFiles/MeniscusDistortion.dir/main.cpp.o
[100%] Linking CXX executable bin/MeniscusDistortion
/usr/bin/ld: CMakeFiles/MeniscusDistortion.dir/main.cpp.o: in function `setup()':
main.cpp:(.text+0x1e0): undefined reference to `mqtt::connect_options::connect_options(int)'
/usr/bin/ld: main.cpp:(.text+0x1f8): undefined reference to `mqtt::connect_options::set_clean_session(bool)'
/usr/bin/ld: main.cpp:(.text+0x224): undefined reference to `mqtt::async_client::set_callback(mqtt::callback&)'
/usr/bin/ld: main.cpp:(.text+0x240): undefined reference to `mqtt::connect_options::connect_options(mqtt::connect_options const&)'
/usr/bin/ld: main.cpp:(.text+0x254): undefined reference to `mqtt::async_client::connect(mqtt::connect_options)'
/usr/bin/ld: main.cpp:(.text+0x2c8): undefined reference to `mqtt::properties::properties()'
/usr/bin/ld: main.cpp:(.text+0x2ec): undefined reference to `mqtt::async_client::subscribe(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, mqtt::subscribe_options const&, mqtt::properties const&)'
/usr/bin/ld: CMakeFiles/MeniscusDistortion.dir/main.cpp.o: in function `__static_initialization_and_destruction_0(int, int)':
main.cpp:(.text+0x88c): undefined reference to `mqtt::async_client::async_client(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, mqtt::iclient_persistence*)'
/usr/bin/ld: main.cpp:(.text+0xb1c): undefined reference to `mqtt::async_client::~async_client()'
collect2: error: ld returned 1 exit status
make[2]: *** [CMakeFiles/MeniscusDistortion.dir/build.make:157: bin/MeniscusDistortion] Error 1
make[1]: *** [CMakeFiles/Makefile2:76: CMakeFiles/MeniscusDistortion.dir/all] Error 2
make: *** [Makefile:84: all] Error 2
